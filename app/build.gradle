plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    signingConfigs {
        debug {
            storeFile file('C:\\Users\\AmmarAbosaid\\Desktop\\WatchAppBundle\\StoreKey\\Halza-2\\halzamasterkey.keystore')
            storePassword 'Halza123'
            keyPassword 'Halza123'
            keyAlias 'halzamasterkey'
        }
        HalzaPreProdSigining {
        storeFile file('C:\\Users\\AmmarAbosaid\\Desktop\\WatchAppBundle\\StoreKey\\Halza-1\\halzaslotskey.keystore')
            keyAlias 'halzaslotskey'
            storePassword 'Halza123'
            keyPassword 'Halza123'
        }
        HalzaProdSigining {
        storeFile file('C:\\Users\\AmmarAbosaid\\Desktop\\WatchAppBundle\\StoreKey\\Halza\\my.keystore')
            keyAlias 'Halzakey'
            storePassword 'Halza123'
            keyPassword 'Halza123'
        }
        HalzaTestSiging {
            storeFile file('C:\\Users\\AmmarAbosaid\\Desktop\\WatchAppBundle\\StoreKey\\Halza-2\\halzamasterkey.keystore')
            keyAlias 'halzamasterkey'
            storePassword 'Halza123'
            keyPassword 'Halza123'
        }
    }

    compileSdk 33

    defaultConfig {
        
        minSdk 28
        targetSdk 31
        versionCode 2023020719
        versionName "2023020719.32488W"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug

    }
    flavorDimensions 'Default'
    productFlavors {
        halzaTest {
            dimension 'Default'
            applicationId "com.Halza.Master"
            minSdkVersion 28
            resValue "string", "app_name", "Halza-2"
            targetSdkVersion 31
            signingConfig signingConfigs.HalzaTestSiging
            buildConfigField "String", "DEEP_LINK_EXSIT_USER","\"https://test.myhalza.com/deeplink?url=halzaprod://IFViewer\""
            buildConfigField "String", "DEEP_LINK_NEW_USER","\"https://test.myhalza.com/deeplink?url=halzaprod://ConnectedDeviceList\""
            buildConfigField "String", "BASE_URL","\"https://api.test.halza.com/intermittentfasting/\""
            buildConfigField "String", "SUBSCRIPTION_KEY_VALUE","\"acbef760627b4fa5ac991a7ea764b096\""

        }
        halzaStaging {
            dimension 'Default'
            applicationId "com.Halza.Slots"
            resValue "string", "app_name", "Halza-1"
            minSdkVersion 28
            targetSdkVersion 31
            buildConfigField "String", "BASE_URL","\"https://api.halza.com/intermittentfasting/\""
            buildConfigField "String", "SUBSCRIPTION_KEY_VALUE","\"4cd6dbccbd764b72bebc94ed4d3444b0\""
            buildConfigField "String", "DEEP_LINK_EXSIT_USER","\"https://beta.myhalza.com/deeplink?url=halzaprod://IFViewer\""
            buildConfigField "String", "DEEP_LINK_NEW_USER","\"https://beta.myhalza.com/deeplink?url=halzaprod://ConnectedDeviceList\""
            signingConfig signingConfigs.HalzaPreProdSigining


        }
        halzaProduction {
            dimension 'Default'
            applicationId "com.Halza"
            resValue "string", "app_name", "Halza"
            minSdkVersion 28
            targetSdkVersion 31
            buildConfigField "String", "DEEP_LINK_EXSIT_USER","\"https://myhalza.com/deeplink?url=halzaprod://IFViewer\""
            buildConfigField "String", "DEEP_LINK_NEW_USER","\"https://myhalza.com/deeplink?url=halzaprod://ConnectedDeviceList\""
            buildConfigField "String", "BASE_URL","\"https://api.halza.com/intermittentfasting/\""
            buildConfigField "String", "SUBSCRIPTION_KEY_VALUE","\"4cd6dbccbd764b72bebc94ed4d3444b0\""
            signingConfig signingConfigs.HalzaProdSigining


        }
    }
    buildTypes {

        release {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        debug{

        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.gms:play-services-wearable:18.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.wear.compose:compose-material:$wear_compose_version"
    implementation "androidx.wear.compose:compose-foundation:$wear_compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.4.+'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.wear:wear-remote-interactions:1.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'


    // Use to utilize components and layouts with Material design in your tiles
    implementation("androidx.wear.tiles:tiles-material:1.1.0")

    // Use to preview wear tiles in your own app
    debugImplementation("androidx.wear.tiles:tiles-renderer:1.1.0")

    implementation 'androidx.compose.material3:material3:1.0.0-alpha15'
    //Call Apis Libraries
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

}